# 系统配置
system:
  env: dev # 环境 dev, test, prod
  port: 8080 # 服务端口
  db_type: mysql # 数据库类型
  use_redis: true # 是否使用redis
  use_multipoint: false # 是否开启多点登录拦截
  oss_type: local # 存储类型 local:本地 qiniu:七牛云 aliyun:阿里云 tencent:腾讯云
  use_https: false # 是否使用https
  jwt_secret: your-jwt-secret-key # JWT密钥
  jwt_expire: 86400 # JWT过期时间(秒)

# 日志配置
log:
  level: info # 日志级别 debug, info, warn, error, dpanic, panic, fatal
  format: console # 日志输出格式 console, json
  prefix: "[PIPELINE]" # 日志前缀
  director: logs # 日志存放目录
  show_line: true # 是否显示行号
  log_in_console: true # 是否输出到控制台
  max_size: 100 # 单个日志文件最大尺寸(MB)
  max_age: 30 # 日志文件最大保存天数
  max_backups: 10 # 日志文件最大保存数量

# 数据库配置
mysql:
  path: localhost # 服务器地址
  port: 3306 # 端口
  config: charset=utf8mb4&parseTime=True&loc=Local # 其他配置
  db_name: assembly_line # 数据库名
  username: root # 用户名
  password: lyn123 # 密码
  max_idle_conns: 10 # 空闲连接池中连接的最大数量
  max_open_conns: 100 # 打开数据库连接的最大数量
  log_mode: info # 日志级别
  log_zap: false # 是否使用zap记录日志

# Redis配置
redis:
  db: 0 # 数据库索引
  addr: 127.0.0.1:6379 # 服务器地址
  password: "" # 密码
  pool_size: 100 # 连接池大小

# 跨域配置
cors:
  mode: allow-all # 跨域模式 allow-all, whitelist, custom
  whitelist:
    - "http://localhost:8080"
    - "http://localhost:3000"
  allow_credentials: true
  allow_methods: "GET,POST,PUT,DELETE,OPTIONS"
  allow_headers: "Content-Type,AccessToken,X-CSRF-Token,Authorization,Token,X-Token,X-User-Id"
  expose_headers: "Content-Length,Access-Control-Allow-Origin,Access-Control-Allow-Headers,Content-Type"
  max_age: 43200 # 预检请求有效期(秒)

# 上传配置
upload:
  local:
    path: uploads/file # 本地文件存储路径
    store_path: uploads/file # 本地文件访问路径
  qiniu:
    zone: ZoneHuaDong # 存储区域
    bucket: your-bucket # 空间名称
    img_path: your-img-path # 图片路径
    use_https: false # 是否使用https
    access_key: your-access-key # 秘钥AK
    secret_key: your-secret-key # 秘钥SK
    use_cdn_domains: false # 是否使用CDN加速

# Kubernetes配置
kubernetes:
  kubeconfig: ~/.kube/config # kubeconfig文件路径
  namespace: default # 命名空间
  deployment_name: your-deployment-name # 部署名称
  container_name: your-container-name # 容器名称
  image: your-image-name:latest # 镜像名称
  replicas: 3 # 副本数量
  port: 8080 # 容器端口
  service_type: ClusterIP # 服务类型
  service_port: 8080 # 服务端口
  ingress_host: your-ingress-host # Ingress主机名
  ingress_path: / # Ingress路径
  ingress_class: nginx # Ingress类
  ingress_tls: true # 是否启用TLS
  ingress_tls_secret_name: your-tls-secret-name # TLS密钥名称
  ingress_tls_secret_namespace: your-tls-secret-namespace # TLS密钥命名空间